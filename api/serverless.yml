service: gaia-2

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-notes

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-2

  environment:
    tableName: ${self:custom.tableName}
    stripeSecretKey: ${env:STRIPE_SECRET_KEY}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ NotesTable, Arn ]

functions:
  note-create:
    handler: src/note/create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  note-get:
    handler: src/note/get.main
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam
  note-list:
    handler: src/note/list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam
  note-update:
    handler: src/note/update.main
    events:
      - http:
          path: notes/{id}
          method: put
          cors: true
          authorizer: aws_iam
  note-delete:
    handler: src/note/delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  billing-create:
    handler: src/billing/create.main
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizer: aws_iam

resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/dynamodb-table.yml)}
  - ${file(resources/s3-bucket.yml)}
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}